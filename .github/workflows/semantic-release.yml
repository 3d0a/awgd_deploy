---
name: Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    types: [closed]
env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
jobs:
  release:
    name: Release
    runs-on: self-hosted
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Semantic Release
      uses: cycjimmy/semantic-release-action@v3
      id: semantic
      with:
        extra_plugins: |
          @semantic-release/changelog
          @semantic-release/git

# Сохнаряем версию релиза, чтобы создать контейнер такой версии
    - name: Get version
      id: set-version
      run: |
        echo "version=$(cat VERSION)" >> $GITHUB_OUTPUT
# Логин в GitHub Container Registry
    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}  # Автоматически использует логин GitHub
        password: ${{ secrets.GITHUB_TOKEN }}  # Токен создается автоматически
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container 
        install: true             
        
    # Сборка и публикация образа
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .  # Где искать Dockerfile (корень репозитория)
        push: true  # Публиковать образ после сборки
        #Переменну берем из semantic-release
        tags: |
          ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
          ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ steps.set-version.outputs.version }}
        labels: |
          org.opencontainers.image.source=${{ github.repository_url }}
        cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:cache
        cache-to: type=registry,ref=ghcr.io/${{ github.repository }}:cache,mode=max